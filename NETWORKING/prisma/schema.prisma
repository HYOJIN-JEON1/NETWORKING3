generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid())
  name          String
  email         String   @unique
  password      String
  kdtClass      String
  github        String
  bio           String?
  techStacks    String[]
  interests     String[]
  portfolio     Portfolio[]
  posts         Post[]
  comments      Comment[]
  sentChats     CoffeeChat[] @relation("SentChats")
  receivedChats CoffeeChat[] @relation("ReceivedChats")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Portfolio {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  title     String
  url       String?
  desc      String?
}

model Post {
  id          String   @id @default(uuid())
  author      User     @relation(fields: [authorId], references: [id])
  authorId    String
  type        String
  title       String
  content     String
  fields      String[]
  techStacks  String[]
  dueDate     DateTime
  comments    Comment[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Comment {
  id        String   @id @default(uuid())
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  content   String
  parentId  String?
  createdAt DateTime @default(now())
}

model CoffeeChat {
  id          String   @id @default(uuid())
  from        User     @relation("SentChats", fields: [fromId], references: [id])
  fromId      String
  to          User     @relation("ReceivedChats", fields: [toId], references: [id])
  toId        String
  message     String
  status      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
} 